{
  "{\"filename\":\"/opt/kibana/installedPlugins/.plugin.installing/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar ensureMarvelIndex = require('./server/lib/ensure_marvel_index');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function injectVars(server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        index: Joi.string()['default']('.marvel-es-data'),\n        index_prefix: Joi.string()['default']('.marvel-es-'),\n        missing_intervals: Joi.number()['default'](12),\n        max_bucket_size: Joi.number()['default'](10000),\n        min_interval_seconds: Joi.number()['default'](10),\n        report_stats: Joi.boolean()['default'](true),\n        google_tag_manager_id: Joi.string()['default']('GTM-WXMHGM'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string()['default']('/api/marvel/v1/phone-home'),\n          otherwise: Joi.string()['default']('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/)['default']('10s')\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      // Make sure the Marvel index is created\n      ensureMarvelIndex(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xDLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUM7QUFDaEMsSUFBSSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQztBQUN2RSxJQUFJLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDOztBQUVwRSxNQUFNLENBQUMsT0FBTyxHQUFHLFVBQVUsTUFBTSxFQUFFO0FBQ2pDLFNBQU8sSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ3ZCLFdBQU8sRUFBRSxDQUFDLGVBQWUsQ0FBQztBQUMxQixRQUFJLEVBQUUsUUFBUTs7QUFFZCxhQUFTLEVBQUU7QUFDVCxTQUFHLEVBQUU7QUFDSCxhQUFLLEVBQUUsUUFBUTtBQUNmLG1CQUFXLEVBQUUsOEJBQThCO0FBQzNDLFlBQUksRUFBRSx1QkFBdUI7QUFDN0Isa0JBQVUsRUFBRSxvQkFBVSxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBQ3JDLGNBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM3QixpQkFBTztBQUNMLHlCQUFhLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQztBQUNuRCw4QkFBa0IsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDO0FBQzdELG9CQUFRLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDcEMsd0JBQVksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDO0FBQ3BELDBCQUFjLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQztBQUN4RCwwQkFBYyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUM7QUFDckQsdUJBQVcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDO0FBQzlDLDZCQUFpQixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7QUFDcEQsOEJBQWtCLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQztXQUMvRCxDQUFDO1NBQ0g7T0FDRjtLQUNGOztBQUVELFVBQU0sRUFBRSxnQkFBVSxHQUFHLEVBQUU7QUFDckIsYUFBTyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ2hCLGVBQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVEsQ0FBQyxJQUFJLENBQUM7QUFDcEMsYUFBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLGlCQUFpQixDQUFDO0FBQzlDLG9CQUFZLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsYUFBYSxDQUFDO0FBQ2pELHlCQUFpQixFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLEVBQUUsQ0FBQztBQUMzQyx1QkFBZSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLEtBQUssQ0FBQztBQUM1Qyw0QkFBb0IsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxFQUFFLENBQUM7QUFDOUMsb0JBQVksRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVEsQ0FBQyxJQUFJLENBQUM7QUFDekMsNkJBQXFCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsWUFBWSxDQUFDO0FBQ3pELHdCQUFnQixFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2pDLFlBQUUsRUFBRSxJQUFJO0FBQ1IsY0FBSSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsV0FBUSxDQUFDLDJCQUEyQixDQUFDO0FBQ3ZELG1CQUFTLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsMkRBQTJELENBQUM7U0FDN0YsQ0FBQztBQUNGLGFBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ2hCLGtCQUFRLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxXQUFRLENBQUMsS0FBSyxDQUFDO1NBQ2hFLENBQUMsV0FBUSxFQUFFO09BQ2IsQ0FBQyxXQUFRLEVBQUUsQ0FBQztLQUNkOztBQUVELFFBQUksRUFBRSxjQUFVLE1BQU0sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLHVCQUFpQixDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQzs7QUFFaEMsd0JBQWtCLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztLQUMvRTtHQUNGLENBQUMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiL29wdC9raWJhbmEvaW5zdGFsbGVkUGx1Z2lucy8ucGx1Z2luLmluc3RhbGxpbmcvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG52YXIgam9pbiA9IHJlcXVpcmUoJ3BhdGgnKS5qb2luO1xudmFyIHJlcXVpcmVBbGxBbmRBcHBseSA9IHJlcXVpcmUoJy4vc2VydmVyL2xpYi9yZXF1aXJlX2FsbF9hbmRfYXBwbHknKTtcbnZhciBlbnN1cmVNYXJ2ZWxJbmRleCA9IHJlcXVpcmUoJy4vc2VydmVyL2xpYi9lbnN1cmVfbWFydmVsX2luZGV4Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtpYmFuYSkge1xuICByZXR1cm4gbmV3IGtpYmFuYS5QbHVnaW4oe1xuICAgIHJlcXVpcmU6IFsnZWxhc3RpY3NlYXJjaCddLFxuICAgIG5hbWU6ICdtYXJ2ZWwnLFxuXG4gICAgdWlFeHBvcnRzOiB7XG4gICAgICBhcHA6IHtcbiAgICAgICAgdGl0bGU6ICdNYXJ2ZWwnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ01vbml0b3JpbmcgZm9yIEVsYXN0aWNzZWFyY2gnLFxuICAgICAgICBtYWluOiAncGx1Z2lucy9tYXJ2ZWwvbWFydmVsJyxcbiAgICAgICAgaW5qZWN0VmFyczogZnVuY3Rpb24gKHNlcnZlciwgb3B0aW9ucykge1xuICAgICAgICAgIHZhciBjb25maWcgPSBzZXJ2ZXIuY29uZmlnKCk7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1heEJ1Y2tldFNpemU6IGNvbmZpZy5nZXQoJ21hcnZlbC5tYXhfYnVja2V0X3NpemUnKSxcbiAgICAgICAgICAgIG1pbkludGVydmFsU2Vjb25kczogY29uZmlnLmdldCgnbWFydmVsLm1pbl9pbnRlcnZhbF9zZWNvbmRzJyksXG4gICAgICAgICAgICBrYm5JbmRleDogY29uZmlnLmdldCgna2liYW5hLmluZGV4JyksXG4gICAgICAgICAgICBlc0FwaVZlcnNpb246IGNvbmZpZy5nZXQoJ2VsYXN0aWNzZWFyY2guYXBpVmVyc2lvbicpLFxuICAgICAgICAgICAgZXNTaGFyZFRpbWVvdXQ6IGNvbmZpZy5nZXQoJ2VsYXN0aWNzZWFyY2guc2hhcmRUaW1lb3V0JyksXG4gICAgICAgICAgICBzdGF0c1JlcG9ydFVybDogY29uZmlnLmdldCgnbWFydmVsLnN0YXRzX3JlcG9ydF91cmwnKSxcbiAgICAgICAgICAgIHJlcG9ydFN0YXRzOiBjb25maWcuZ2V0KCdtYXJ2ZWwucmVwb3J0X3N0YXRzJyksXG4gICAgICAgICAgICBtYXJ2ZWxJbmRleFByZWZpeDogY29uZmlnLmdldCgnbWFydmVsLmluZGV4X3ByZWZpeCcpLFxuICAgICAgICAgICAgZ29vZ2xlVGFnTWFuYWdlcklkOiBjb25maWcuZ2V0KCdtYXJ2ZWwuZ29vZ2xlX3RhZ19tYW5hZ2VyX2lkJylcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNvbmZpZzogZnVuY3Rpb24gKEpvaSkge1xuICAgICAgcmV0dXJuIEpvaS5vYmplY3Qoe1xuICAgICAgICBlbmFibGVkOiBKb2kuYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSksXG4gICAgICAgIGluZGV4OiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnLm1hcnZlbC1lcy1kYXRhJyksXG4gICAgICAgIGluZGV4X3ByZWZpeDogSm9pLnN0cmluZygpLmRlZmF1bHQoJy5tYXJ2ZWwtZXMtJyksXG4gICAgICAgIG1pc3NpbmdfaW50ZXJ2YWxzOiBKb2kubnVtYmVyKCkuZGVmYXVsdCgxMiksXG4gICAgICAgIG1heF9idWNrZXRfc2l6ZTogSm9pLm51bWJlcigpLmRlZmF1bHQoMTAwMDApLFxuICAgICAgICBtaW5faW50ZXJ2YWxfc2Vjb25kczogSm9pLm51bWJlcigpLmRlZmF1bHQoMTApLFxuICAgICAgICByZXBvcnRfc3RhdHM6IEpvaS5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbiAgICAgICAgZ29vZ2xlX3RhZ19tYW5hZ2VyX2lkOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnR1RNLVdYTUhHTScpLFxuICAgICAgICBzdGF0c19yZXBvcnRfdXJsOiBKb2kud2hlbignJGRldicsIHtcbiAgICAgICAgICBpczogdHJ1ZSxcbiAgICAgICAgICB0aGVuOiBKb2kuc3RyaW5nKCkuZGVmYXVsdCgnL2FwaS9tYXJ2ZWwvdjEvcGhvbmUtaG9tZScpLFxuICAgICAgICAgIG90aGVyd2lzZTogSm9pLnN0cmluZygpLmRlZmF1bHQoJ2h0dHBzOi8vbWFydmVsLXN0YXRzLmVsYXN0aWNzZWFyY2guY29tL2FwcGRhdGEvbWFydmVsT3B0cycpXG4gICAgICAgIH0pLFxuICAgICAgICBhZ2VudDogSm9pLm9iamVjdCh7XG4gICAgICAgICAgaW50ZXJ2YWw6IEpvaS5zdHJpbmcoKS5yZWdleCgvW1xcZFxcLl0rW3lNd2RobXNdLykuZGVmYXVsdCgnMTBzJylcbiAgICAgICAgfSkuZGVmYXVsdCgpXG4gICAgICB9KS5kZWZhdWx0KCk7XG4gICAgfSxcblxuICAgIGluaXQ6IGZ1bmN0aW9uIChzZXJ2ZXIsIG9wdGlvbnMpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSB0aGUgTWFydmVsIGluZGV4IGlzIGNyZWF0ZWRcbiAgICAgIGVuc3VyZU1hcnZlbEluZGV4KHRoaXMsIHNlcnZlcik7XG4gICAgICAvLyBSZXF1aXJlIGFsbCB0aGUgcm91dGVzXG4gICAgICByZXF1aXJlQWxsQW5kQXBwbHkoam9pbihfX2Rpcm5hbWUsICdzZXJ2ZXInLCAncm91dGVzJywgJyoqJywgJyouanMnKSwgc2VydmVyKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/opt/kibana/installedPlugins/.plugin.installing/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/opt/kibana/installedPlugins/.plugin.installing/index.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar join = require('path').join;\nvar requireAllAndApply = require('./server/lib/require_all_and_apply');\nvar ensureMarvelIndex = require('./server/lib/ensure_marvel_index');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    require: ['elasticsearch'],\n    name: 'marvel',\n\n    uiExports: {\n      app: {\n        title: 'Marvel',\n        description: 'Monitoring for Elasticsearch',\n        main: 'plugins/marvel/marvel',\n        injectVars: function (server, options) {\n          var config = server.config();\n          return {\n            maxBucketSize: config.get('marvel.max_bucket_size'),\n            minIntervalSeconds: config.get('marvel.min_interval_seconds'),\n            kbnIndex: config.get('kibana.index'),\n            esApiVersion: config.get('elasticsearch.apiVersion'),\n            esShardTimeout: config.get('elasticsearch.shardTimeout'),\n            statsReportUrl: config.get('marvel.stats_report_url'),\n            reportStats: config.get('marvel.report_stats'),\n            marvelIndexPrefix: config.get('marvel.index_prefix'),\n            googleTagManagerId: config.get('marvel.google_tag_manager_id')\n          };\n        }\n      }\n    },\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        index: Joi.string().default('.marvel-es-data'),\n        index_prefix: Joi.string().default('.marvel-es-'),\n        missing_intervals: Joi.number().default(12),\n        max_bucket_size: Joi.number().default(10000),\n        min_interval_seconds: Joi.number().default(10),\n        report_stats: Joi.boolean().default(true),\n        google_tag_manager_id: Joi.string().default('GTM-WXMHGM'),\n        stats_report_url: Joi.when('$dev', {\n          is: true,\n          then: Joi.string().default('/api/marvel/v1/phone-home'),\n          otherwise: Joi.string().default('https://marvel-stats.elasticsearch.com/appdata/marvelOpts')\n        }),\n        agent: Joi.object({\n          interval: Joi.string().regex(/[\\d\\.]+[yMwdhms]/).default('10s')\n        }).default()\n      }).default();\n    },\n\n    init: function (server, options) {\n      // Make sure the Marvel index is created\n      ensureMarvelIndex(this, server);\n      // Require all the routes\n      requireAllAndApply(join(__dirname, 'server', 'routes', '**', '*.js'), server);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1448380261000
  },
  "{\"filename\":\"/opt/kibana/installedPlugins/.plugin.installing/server/lib/require_all_and_apply.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL3NlcnZlci9saWIvcmVxdWlyZV9hbGxfYW5kX2FwcGx5LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQzs7QUFFbEMsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLElBQUksRUFBRSxNQUFNLEVBQUU7QUFDdkMsU0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFVLE9BQU8sRUFBRSxNQUFNLEVBQUU7QUFDNUMsUUFBSSxDQUFDLElBQUksRUFBRSxVQUFVLEdBQUcsRUFBRSxLQUFLLEVBQUU7QUFDL0IsVUFBSSxHQUFHLEVBQUUsT0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDNUIsVUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNqQyxhQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFO0FBQzVCLFVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztPQUNaLENBQUMsQ0FBQztBQUNILGFBQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNsQixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6Ii9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL3NlcnZlci9saWIvcmVxdWlyZV9hbGxfYW5kX2FwcGx5LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG52YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2JsdWViaXJkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHBhdGgsIHNlcnZlcikge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGdsb2IocGF0aCwgZnVuY3Rpb24gKGVyciwgZmlsZXMpIHtcbiAgICAgIGlmIChlcnIpIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgIHZhciBtb2R1bGVzID0gZmlsZXMubWFwKHJlcXVpcmUpO1xuICAgICAgbW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICBmbihzZXJ2ZXIpO1xuICAgICAgfSk7XG4gICAgICByZXNvbHZlKG1vZHVsZXMpO1xuICAgIH0pO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/opt/kibana/installedPlugins/.plugin.installing/server/lib/require_all_and_apply.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvC,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,QAAI,CAAC,IAAI,EAAE,UAAU,GAAG,EAAE,KAAK,EAAE;AAC/B,UAAI,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5B,UAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjC,aAAO,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;AAC5B,UAAE,CAAC,MAAM,CAAC,CAAC;OACZ,CAAC,CAAC;AACH,aAAO,CAAC,OAAO,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/opt/kibana/installedPlugins/.plugin.installing/server/lib/require_all_and_apply.js",
      "sourcesContent": [
        "var glob = require('glob');\nvar Promise = require('bluebird');\n\nmodule.exports = function (path, server) {\n  return new Promise(function (resolve, reject) {\n    glob(path, function (err, files) {\n      if (err) return reject(err);\n      var modules = files.map(require);\n      modules.forEach(function (fn) {\n        fn(server);\n      });\n      resolve(modules);\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1448380261000
  },
  "{\"filename\":\"/opt/kibana/installedPlugins/.plugin.installing/server/lib/ensure_marvel_index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar createMarvelIndexPattern = require('./create_marvel_index_pattern');\nmodule.exports = function (plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  // Once the elasticsearch plugin goes green we need to start setting up\n  // the Marvel index.\n  server.plugins.elasticsearch.status.on('green', function () {\n    return createMarvelIndexPattern(server).then(function () {\n      plugin.status.green('Marvel index ready');\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL3NlcnZlci9saWIvZW5zdXJlX21hcnZlbF9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxJQUFJLHdCQUF3QixHQUFHLE9BQU8sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO0FBQ3hFLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBVSxNQUFNLEVBQUUsTUFBTSxFQUFFO0FBQ3pDLFFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLDJCQUEyQixDQUFDLENBQUM7QUFDbEQsTUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDOzs7O0FBSWpELFFBQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFlBQVk7QUFDMUQsV0FBTyx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsQ0FDcEMsSUFBSSxDQUFDLFlBQVk7QUFDaEIsWUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztLQUMzQyxDQUFDLENBQUM7R0FDTixDQUFDLENBQUM7Q0FFSixDQUFDIiwiZmlsZSI6Ii9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL3NlcnZlci9saWIvZW5zdXJlX21hcnZlbF9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbnZhciBjcmVhdGVNYXJ2ZWxJbmRleFBhdHRlcm4gPSByZXF1aXJlKCcuL2NyZWF0ZV9tYXJ2ZWxfaW5kZXhfcGF0dGVybicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocGx1Z2luLCBzZXJ2ZXIpIHtcbiAgcGx1Z2luLnN0YXR1cy55ZWxsb3coJ1dhaXRpbmcgZm9yIEVsYXN0aWNzZWFyY2gnKTtcbiAgdmFyIGNsaWVudCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2xpZW50O1xuXG4gIC8vIE9uY2UgdGhlIGVsYXN0aWNzZWFyY2ggcGx1Z2luIGdvZXMgZ3JlZW4gd2UgbmVlZCB0byBzdGFydCBzZXR0aW5nIHVwXG4gIC8vIHRoZSBNYXJ2ZWwgaW5kZXguXG4gIHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guc3RhdHVzLm9uKCdncmVlbicsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY3JlYXRlTWFydmVsSW5kZXhQYXR0ZXJuKHNlcnZlcilcbiAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcGx1Z2luLnN0YXR1cy5ncmVlbignTWFydmVsIGluZGV4IHJlYWR5Jyk7XG4gICAgICB9KTtcbiAgfSk7XG5cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/opt/kibana/installedPlugins/.plugin.installing/server/lib/ensure_marvel_index.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,wBAAwB,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AACxE,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;AACzC,QAAM,CAAC,MAAM,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;AAClD,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;;;;AAIjD,QAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY;AAC1D,WAAO,wBAAwB,CAAC,MAAM,CAAC,CACpC,IAAI,CAAC,YAAY;AAChB,YAAM,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;KAC3C,CAAC,CAAC;GACN,CAAC,CAAC;CAEJ,CAAC",
      "file": "/opt/kibana/installedPlugins/.plugin.installing/server/lib/ensure_marvel_index.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar createMarvelIndexPattern = require('./create_marvel_index_pattern');\nmodule.exports = function (plugin, server) {\n  plugin.status.yellow('Waiting for Elasticsearch');\n  var client = server.plugins.elasticsearch.client;\n\n  // Once the elasticsearch plugin goes green we need to start setting up\n  // the Marvel index.\n  server.plugins.elasticsearch.status.on('green', function () {\n    return createMarvelIndexPattern(server)\n      .then(function () {\n        plugin.status.green('Marvel index ready');\n      });\n  });\n\n};\n"
      ]
    },
    "mtime": 1448380261000
  },
  "{\"filename\":\"/opt/kibana/installedPlugins/.plugin.installing/server/lib/create_marvel_index_pattern.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var index = server.config().get('kibana.index');\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id = '[' + marvelIndexPrefix + ']YYYY.MM.DD';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  })['catch'](function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    }).then(function () {\n      return client.search({\n        index: index,\n        type: 'config',\n        body: {\n          sort: { 'buildNum': { order: 'desc' } },\n          size: 1\n        }\n      });\n    }).then(function (resp) {\n      var config;\n      if (resp.hits.total) {\n        config = resp.hits.hits[0];\n        if (!config._source.defaultIndex) {\n          config._source.defaultIndex = id;\n          return client.index({\n            index: config._index,\n            type: config._type,\n            id: config._id,\n            body: config._source\n          });\n        }\n      }\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9vcHQva2liYW5hL2luc3RhbGxlZFBsdWdpbnMvLnBsdWdpbi5pbnN0YWxsaW5nL3NlcnZlci9saWIvY3JlYXRlX21hcnZlbF9pbmRleF9wYXR0ZXJuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xDLElBQUksa0JBQWtCLEdBQUcsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7QUFDaEUsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLE1BQU0sRUFBRTtBQUNqQyxNQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ2hELE1BQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQztBQUNqRCxNQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDN0IsTUFBSSxpQkFBaUIsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDMUQsTUFBSSxFQUFFLEdBQUksR0FBRyxHQUFHLGlCQUFpQixHQUFHLGFBQWEsQ0FBQztBQUNsRCxNQUFJLElBQUksR0FBRyxlQUFlLENBQUM7QUFDM0IsU0FBTyxNQUFNLENBQUMsR0FBRyxDQUFDO0FBQ2hCLFNBQUssRUFBRSxLQUFLO0FBQ1osUUFBSSxFQUFFLElBQUk7QUFDVixNQUFFLEVBQUUsRUFBRTtBQUNOLHFCQUFpQixFQUFFLElBQUk7R0FDeEIsQ0FBQyxTQUFNLENBQUMsVUFBVSxJQUFJLEVBQUU7QUFDdkIsUUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckQsV0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ2xCLFdBQUssRUFBRSxLQUFLO0FBQ1osVUFBSSxFQUFFLElBQUk7QUFDVixRQUFFLEVBQUUsRUFBRTtBQUNOLFVBQUksRUFBRSxrQkFBa0I7S0FDekIsQ0FBQyxDQUNELElBQUksQ0FBQyxZQUFZO0FBQ2hCLGFBQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztBQUNuQixhQUFLLEVBQUUsS0FBSztBQUNaLFlBQUksRUFBRSxRQUFRO0FBQ2QsWUFBSSxFQUFFO0FBQ0osY0FBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFO0FBQ3ZDLGNBQUksRUFBRSxDQUFDO1NBQ1I7T0FDRixDQUFDLENBQUM7S0FDSixDQUFDLENBQ0QsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQ3BCLFVBQUksTUFBTSxDQUFDO0FBQ1gsVUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtBQUNuQixjQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsWUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFO0FBQ2hDLGdCQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7QUFDakMsaUJBQU8sTUFBTSxDQUFDLEtBQUssQ0FBQztBQUNsQixpQkFBSyxFQUFFLE1BQU0sQ0FBQyxNQUFNO0FBQ3BCLGdCQUFJLEVBQUUsTUFBTSxDQUFDLEtBQUs7QUFDbEIsY0FBRSxFQUFFLE1BQU0sQ0FBQyxHQUFHO0FBQ2QsZ0JBQUksRUFBRSxNQUFNLENBQUMsT0FBTztXQUNyQixDQUFDLENBQUM7U0FDSjtPQUNGO0tBQ0YsQ0FBQyxDQUFDO0dBQ0osQ0FBQyxDQUFDO0NBQ0osQ0FBQyIsImZpbGUiOiIvb3B0L2tpYmFuYS9pbnN0YWxsZWRQbHVnaW5zLy5wbHVnaW4uaW5zdGFsbGluZy9zZXJ2ZXIvbGliL2NyZWF0ZV9tYXJ2ZWxfaW5kZXhfcGF0dGVybi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBQcm9taXNlID0gcmVxdWlyZSgnYmx1ZWJpcmQnKTtcbnZhciBtYXJ2ZWxJbmRleFBhdHRlcm4gPSByZXF1aXJlKCcuL21hcnZlbF9pbmRleF9wYXR0ZXJuLmpzb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHNlcnZlcikge1xuICB2YXIgaW5kZXggPSBzZXJ2ZXIuY29uZmlnKCkuZ2V0KCdraWJhbmEuaW5kZXgnKTtcbiAgdmFyIGNsaWVudCA9IHNlcnZlci5wbHVnaW5zLmVsYXN0aWNzZWFyY2guY2xpZW50O1xuICB2YXIgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuICB2YXIgbWFydmVsSW5kZXhQcmVmaXggPSBjb25maWcuZ2V0KCdtYXJ2ZWwuaW5kZXhfcHJlZml4Jyk7XG4gIHZhciBpZCA9ICAnWycgKyBtYXJ2ZWxJbmRleFByZWZpeCArICddWVlZWS5NTS5ERCc7XG4gIHZhciB0eXBlID0gJ2luZGV4LXBhdHRlcm4nO1xuICByZXR1cm4gY2xpZW50LmdldCh7XG4gICAgaW5kZXg6IGluZGV4LFxuICAgIHR5cGU6IHR5cGUsXG4gICAgaWQ6IGlkLFxuICAgIGlnbm9yZVVuYXZhaWxhYmxlOiB0cnVlXG4gIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXNwKSB7XG4gICAgaWYgKHJlc3Auc3RhdHVzICE9PSA0MDQpIHJldHVybiBQcm9taXNlLnJlamVjdChyZXNwKTtcbiAgICByZXR1cm4gY2xpZW50LmluZGV4KHtcbiAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgIHR5cGU6IHR5cGUsXG4gICAgICBpZDogaWQsXG4gICAgICBib2R5OiBtYXJ2ZWxJbmRleFBhdHRlcm5cbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBjbGllbnQuc2VhcmNoKHtcbiAgICAgICAgaW5kZXg6IGluZGV4LFxuICAgICAgICB0eXBlOiAnY29uZmlnJyxcbiAgICAgICAgYm9keToge1xuICAgICAgICAgIHNvcnQ6IHsgJ2J1aWxkTnVtJzogeyBvcmRlcjogJ2Rlc2MnIH0gfSxcbiAgICAgICAgICBzaXplOiAxXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHtcbiAgICAgIHZhciBjb25maWc7XG4gICAgICBpZiAocmVzcC5oaXRzLnRvdGFsKSB7XG4gICAgICAgIGNvbmZpZyA9IHJlc3AuaGl0cy5oaXRzWzBdO1xuICAgICAgICBpZiAoIWNvbmZpZy5fc291cmNlLmRlZmF1bHRJbmRleCkge1xuICAgICAgICAgIGNvbmZpZy5fc291cmNlLmRlZmF1bHRJbmRleCA9IGlkO1xuICAgICAgICAgIHJldHVybiBjbGllbnQuaW5kZXgoe1xuICAgICAgICAgICAgaW5kZXg6IGNvbmZpZy5faW5kZXgsXG4gICAgICAgICAgICB0eXBlOiBjb25maWcuX3R5cGUsXG4gICAgICAgICAgICBpZDogY29uZmlnLl9pZCxcbiAgICAgICAgICAgIGJvZHk6IGNvbmZpZy5fc291cmNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/opt/kibana/installedPlugins/.plugin.installing/server/lib/create_marvel_index_pattern.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAClC,IAAI,kBAAkB,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAC;AAChE,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACjC,MAAI,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAChD,MAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC;AACjD,MAAI,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC7B,MAAI,iBAAiB,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC1D,MAAI,EAAE,GAAI,GAAG,GAAG,iBAAiB,GAAG,aAAa,CAAC;AAClD,MAAI,IAAI,GAAG,eAAe,CAAC;AAC3B,SAAO,MAAM,CAAC,GAAG,CAAC;AAChB,SAAK,EAAE,KAAK;AACZ,QAAI,EAAE,IAAI;AACV,MAAE,EAAE,EAAE;AACN,qBAAiB,EAAE,IAAI;GACxB,CAAC,SAAM,CAAC,UAAU,IAAI,EAAE;AACvB,QAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAE,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACrD,WAAO,MAAM,CAAC,KAAK,CAAC;AAClB,WAAK,EAAE,KAAK;AACZ,UAAI,EAAE,IAAI;AACV,QAAE,EAAE,EAAE;AACN,UAAI,EAAE,kBAAkB;KACzB,CAAC,CACD,IAAI,CAAC,YAAY;AAChB,aAAO,MAAM,CAAC,MAAM,CAAC;AACnB,aAAK,EAAE,KAAK;AACZ,YAAI,EAAE,QAAQ;AACd,YAAI,EAAE;AACJ,cAAI,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE;AACvC,cAAI,EAAE,CAAC;SACR;OACF,CAAC,CAAC;KACJ,CAAC,CACD,IAAI,CAAC,UAAU,IAAI,EAAE;AACpB,UAAI,MAAM,CAAC;AACX,UAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACnB,cAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE;AAChC,gBAAM,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC;AACjC,iBAAO,MAAM,CAAC,KAAK,CAAC;AAClB,iBAAK,EAAE,MAAM,CAAC,MAAM;AACpB,gBAAI,EAAE,MAAM,CAAC,KAAK;AAClB,cAAE,EAAE,MAAM,CAAC,GAAG;AACd,gBAAI,EAAE,MAAM,CAAC,OAAO;WACrB,CAAC,CAAC;SACJ;OACF;KACF,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC",
      "file": "/opt/kibana/installedPlugins/.plugin.installing/server/lib/create_marvel_index_pattern.js",
      "sourcesContent": [
        "var Promise = require('bluebird');\nvar marvelIndexPattern = require('./marvel_index_pattern.json');\nmodule.exports = function (server) {\n  var index = server.config().get('kibana.index');\n  var client = server.plugins.elasticsearch.client;\n  var config = server.config();\n  var marvelIndexPrefix = config.get('marvel.index_prefix');\n  var id =  '[' + marvelIndexPrefix + ']YYYY.MM.DD';\n  var type = 'index-pattern';\n  return client.get({\n    index: index,\n    type: type,\n    id: id,\n    ignoreUnavailable: true\n  }).catch(function (resp) {\n    if (resp.status !== 404) return Promise.reject(resp);\n    return client.index({\n      index: index,\n      type: type,\n      id: id,\n      body: marvelIndexPattern\n    })\n    .then(function () {\n      return client.search({\n        index: index,\n        type: 'config',\n        body: {\n          sort: { 'buildNum': { order: 'desc' } },\n          size: 1\n        }\n      });\n    })\n    .then(function (resp) {\n      var config;\n      if (resp.hits.total) {\n        config = resp.hits.hits[0];\n        if (!config._source.defaultIndex) {\n          config._source.defaultIndex = id;\n          return client.index({\n            index: config._index,\n            type: config._type,\n            id: config._id,\n            body: config._source\n          });\n        }\n      }\n    });\n  });\n};\n"
      ]
    },
    "mtime": 1448380261000
  }
}